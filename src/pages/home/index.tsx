/* eslint-disable no-magic-numbers */
import { LineChart, Line, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Tooltip, PieChart, Pie, Cell } from "recharts";
import Gold from "../../static/images/gold.png";
import Logo from "../../static/icons/logo.svg";
import Utilities1 from "../../static/icons/utilities-1.png";
import Utilities2 from "../../static/icons/utilities-2.png";
import Utilities3 from "../../static/icons/utilities-3.png";
import { Button } from "@/ui/button";
import { useNavigate } from "react-router-dom";
import { useAuth } from "@/hooks/useAuth";
import { useEffect, useState } from "react";
import { getDashboardStatistics } from "@/services/home";
import { useSetAtom } from "jotai";
import { commonAtom } from "@/atoms/commonAtom";
import { ISummaryData } from "@/types/home.types";
import { formatPrice } from "@/utils/format";
import moment from "moment";

const HomePage = () => {
  const navigate = useNavigate();
  const { authData, onLogin } = useAuth();
  const [dataStatistics, setDataStatistics] = useState<ISummaryData | null>(null);
  const [activeReportTab, setActiveReportTab] = useState<'today' | 'thisWeek' | 'thisMonth' | 'thisYear'>('today');
  const setLoading = useSetAtom(commonAtom);
  const onFetchStatistics = async () => {
    try {
      setLoading({ loading: true });
      const response = await getDashboardStatistics({
        fromDate: moment().format("YYYY-MM-DD"),
        toDate: moment().format("YYYY-MM-DD")
      });
      setDataStatistics(response.data);
    } catch (error) {
      console.error("Failed to fetch dashboard statistics:", error);
      // Khi API lỗi, dataStatistics sẽ là null và các function sẽ trả về fallback data
      setDataStatistics(null);
    } finally {
      setLoading({ loading: false });
    }
  }

  // Function để map dữ liệu weekly chart
  const getWeeklyChartData = () => {
    if (!dataStatistics?.overview7Days?.dailyData) {
      // Fallback data khi không có dữ liệu thực
      return [
        { d: 'T2', v: 0 },
        { d: 'T3', v: 0 },
        { d: 'T4', v: 0 },
        { d: 'T5', v: 0 },
        { d: 'T6', v: 0 },
        { d: 'T7', v: 0 },
        { d: 'CN', v: 0 },
      ];
    }

    const dayMap = ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'];
    return dataStatistics.overview7Days.dailyData.map(item => ({
      d: dayMap[item.dayOfWeek],
      v: item.revenue / 1000 // Chia cho 1000 để hiển thị dễ đọc hơn
    }));
  };

  // Function để lấy dữ liệu báo cáo theo tab được chọn
  const getCurrentReportData = () => {
    if (!dataStatistics?.summary) {
      return {
        totalRevenue: 0,
        revenueGrowth: { value: 0, text: "" },
        totalOrders: 0,
        orderGrowth: { value: 0, text: "" }
      };
    }

    return dataStatistics.summary[activeReportTab];
  };

  // Function để lấy dữ liệu top products
  const getTopProducts = () => {
    if (!dataStatistics?.topProducts || dataStatistics.topProducts.length === 0) {
      // Fallback data khi không có dữ liệu thực
      return [
        { name: 'Chưa có dữ liệu', sold: 0 },
      ];
    }

    return dataStatistics.topProducts.map(item => ({
      name: item.productName,
      sold: item.totalQuantity
    }));
  };

  // Function để lấy dữ liệu payment methods
  const getPaymentMethodsData = () => {
    if (!dataStatistics?.paymentMethods || dataStatistics.paymentMethods.length === 0) {
      // Fallback data khi không có dữ liệu thực
      return {
        data: [{ name: 'Chưa có dữ liệu', value: 100 }],
        primaryMethod: { name: 'Chưa có dữ liệu', percentage: 100 }
      };
    }

    const totalOrders = dataStatistics.paymentMethods.reduce((sum, item) => sum + item.totalOrders, 0);

    if (totalOrders === 0) {
      return {
        data: [{ name: 'Chưa có dữ liệu', value: 100 }],
        primaryMethod: { name: 'Chưa có dữ liệu', percentage: 100 }
      };
    }

    const paymentData = dataStatistics.paymentMethods.map(item => ({
      name: item.paymentMethod,
      value: Math.round((item.totalOrders / totalOrders) * 100)
    }));

    // Tìm phương thức thanh toán có tỷ lệ cao nhất
    const primaryMethod = paymentData.reduce((max, current) =>
      current.value > max.value ? current : max
    );

    return {
      data: paymentData,
      primaryMethod: { name: primaryMethod.name, percentage: primaryMethod.value }
    };
  };

  // Function để lấy dữ liệu recent orders
  const getRecentOrders = () => {
    if (!dataStatistics?.recentOrders || dataStatistics.recentOrders.length === 0) {
      // Fallback data khi không có dữ liệu thực
      return [
        { id: 1, code: 'Chưa có đơn hàng', time: '', amount: '0' },
      ];
    }

    return dataStatistics.recentOrders.map((item, index) => ({
      id: index + 1,
      code: item.orderCode,
      time: formatOrderDate(item.orderDate),
      amount: formatCurrency(item.totalAmount)
    }));
  };

  // Function để format ngày tháng cho đơn hàng
  const formatOrderDate = (dateString: string): string => {
    try {
      const date = new Date(dateString);
      const day = date.getDate().toString().padStart(2, '0');
      const month = (date.getMonth() + 1).toString().padStart(2, '0');
      const year = date.getFullYear();
      const hour = date.getHours().toString().padStart(2, '0');
      const minute = date.getMinutes().toString().padStart(2, '0');

      return `${hour}:${minute} ${day}/${month}/${year}`;
    } catch {
      return dateString; // Fallback nếu format lỗi
    }
  };

  // Function để format currency cho recent orders
  const formatCurrency = (amount: number): string => {
    return new Intl.NumberFormat('vi-VN').format(amount);
  };

  useEffect(() => {
    if (authData?.accessToken) {
      onFetchStatistics();
    }
  }, [authData])
  return (
    <div className="bg-white min-h-full pb-4">
      <div className="mx-auto w-full bg-white text-[#141518]">
        {/* Hero / Brand */}
        <div
          style={{
            background: `url(${Gold})`,
            backgroundRepeat: 'no-repeat',
            backgroundPositionY: -70,
            backgroundPositionX: 'right'
          }}
          className="relative overflow-hidden px-4 pt-5">
          <div className="mb-6">
            <img src={Logo} className="w-[108px] h-auto" />
          </div>
          <div className=" py-4">
            {/* Giao diện chọn chi nhánh chỉ hiện khi đã login và có nhiều chi nhánh */}
            {authData?.accessToken && authData?.branches && authData?.branches.length > 0 ? (
              <div className="relative rounded-2xl border border-[#E5E7EB] bg-white px-4 py-3 shadow-[0_4px_16px_rgba(0,0,0,0.06)]">
                <div className="mb-1 text-[15px] text-gray-500 flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <path d="M21.999 8.90262C21.999 8.72116 21.9495 8.54313 21.856 8.38762L19.147 3.87262C18.9686 3.57746 18.7171 3.33319 18.417 3.16331C18.1168 2.99343 17.7779 2.90365 17.433 2.90262H6.56502C5.86702 2.90262 5.21002 3.27462 4.85102 3.87362L2.14202 8.38762C2.04851 8.54313 1.99908 8.72116 1.99902 8.90262C1.99902 9.90762 2.38502 10.8166 2.99902 11.5206V20.9026C2.99902 21.1678 3.10438 21.4222 3.29192 21.6097C3.47945 21.7973 3.73381 21.9026 3.99902 21.9026H11.999C12.2642 21.9026 12.5186 21.7973 12.7061 21.6097C12.8937 21.4222 12.999 21.1678 12.999 20.9026V15.9026H16.999V20.9026C16.999 21.1678 17.1044 21.4222 17.2919 21.6097C17.4795 21.7973 17.7338 21.9026 17.999 21.9026H19.999C20.2642 21.9026 20.5186 21.7973 20.7061 21.6097C20.8937 21.4222 20.999 21.1678 20.999 20.9026V11.5206C21.613 10.8166 21.999 9.90762 21.999 8.90262ZM19.983 9.15362C19.9219 9.6367 19.6867 10.0809 19.3214 10.4029C18.9561 10.7249 18.486 10.9026 17.999 10.9026C16.896 10.9026 15.999 10.0056 15.999 8.90262C15.999 8.83462 15.974 8.77462 15.96 8.71062L15.98 8.70662L15.219 4.90262H17.433L19.983 9.15362ZM10.006 8.96762L10.818 4.90262H13.179L13.992 8.96762C13.957 10.0406 13.079 10.9026 11.999 10.9026C10.919 10.9026 10.041 10.0406 10.006 8.96762ZM6.56502 4.90262H8.77902L8.01902 8.70662L8.03902 8.71062C8.02402 8.77462 7.99902 8.83462 7.99902 8.90262C7.99902 10.0056 7.10202 10.9026 5.99902 10.9026C5.51209 10.9026 5.04191 10.7249 4.67664 10.4029C4.31138 10.0809 4.07613 9.6367 4.01502 9.15362L6.56502 4.90262ZM9.99902 16.9026H5.99902V13.9026H9.99902V16.9026Z" fill="#1A1A1A" fill-opacity="0.18" />
                  </svg>
                  <span>Chi nhánh</span>
                </div>
                <div className="flex items-center gap-2 text-[15px] font-semibold mt-2">
                  <span>ZenPay - Phạm Văn Đồng</span>
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <path d="M6.75 9.90262L12 15.1526L17.25 9.90262" stroke="#1A1A1A" strokeOpacity="0.7" strokeWidth="2" strokeLinecap="round" />
                  </svg>
                </div>
                <div className="pointer-events-none absolute right-3 top-1/2 -translate-y-1/2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="73" height="74" viewBox="0 0 73 74" fill="none">
                    <path d="M15.7195 9.23398C21.836 21.5709 36.0543 20.6538 46.7234 26.4303L46.2433 24.0814L42.6352 19.4977C45.6007 20.3137 49.1848 21.8115 51.4534 23.9154C53.0083 25.3554 56.2716 32.1147 58.0754 30.829L57.1294 26.435C63.8947 31.4038 59.1911 39.2783 67.3499 43.3513C69.8991 44.6236 70.7021 42.7122 72.2653 47.2091C73.5556 50.9296 73.018 54.2913 71.6473 57.8998C69.6113 52.5871 66.6051 53.0433 62.9099 50.8913C61.0101 49.7871 59.624 47.2548 57.676 46.0466C55.0391 44.4146 51.6881 43.8792 48.6344 44.0631C51.0791 46.1112 54.1245 46.8159 56.7776 48.8319C59.8718 51.1844 61.5653 54.8511 66.2708 54.787C66.6465 57.8671 63.8723 61.4912 60.6186 61.0601C60.827 44.0248 38.9658 54.3218 33.4985 42.184C35.8472 42.4641 37.1966 43.7263 39.6736 43.0382C46.932 41.0212 38.1001 35.672 31.9203 39.6644C24.2654 44.6095 27.1577 58.1308 31.6065 64.524C33.8177 67.7076 37.4675 70.7497 40.5768 74H12.5916C10.9711 69.6519 11.006 64.5379 12.6724 59.7884C8.73787 61.8528 8.29434 66.1462 5.74616 69.2264C4.55271 59.5305 7.93577 52.5784 15.1966 46.578C9.88275 46.7706 5.78094 49.8584 2.90342 54.1227C2.99962 46.7052 8.44083 40.4771 15.3107 38.1886C17.0019 37.6213 20.084 38.4944 19.6128 36.5041C12.5511 34.7921 5.7128 34.591 0.374431 40.2718C-0.0964985 40.3656 -0.0258778 39.6693 0.0701915 39.3417C1.65769 34.181 8.16969 30.3029 13.2999 29.5668C12.7469 27.2708 10.6536 26.4446 9.58718 24.1574C8.76152 22.381 8.28168 20.2101 8.26564 18.2497L12.0734 22.9379C16.7142 24.0265 20.3204 27.8467 24.224 29.6949C31.4784 33.1271 40.7307 30.4201 46.7187 37.7568C43.0151 28.013 31.3366 29.3644 23.6012 25.2772C14.4471 20.4364 10.7736 9.79366 13.3141 0L15.7195 9.23398ZM47.9927 72.6998C50.1812 71.9717 56.9093 70.0148 58.4034 71.7556C58.7096 72.4844 58.9398 73.2383 59.1069 74H48.0402C48.0299 73.9831 48.0172 73.9648 48.0069 73.9478C47.6458 73.358 46.9437 73.5071 47.9927 72.6998ZM42.7636 61.155C45.8333 60.499 52.9674 65.8111 55.5416 67.9642L45.7727 70.8967C44.4677 70.0501 36.348 64.8162 37.2682 63.5702C39.3589 63.705 41.1772 61.4924 42.7636 61.155ZM41.6845 59.7789L35.11 62.3318C32.641 59.6832 30.9884 56.8079 30.323 53.1832L35.2621 52.3433L41.6845 59.7789ZM33.4747 50.3361L30.2612 49.9708L30.9648 44.0536L33.4747 50.3361Z" fill="url(#paint0_linear_1475_13316)" />
                    <defs>
                      <linearGradient id="paint0_linear_1475_13316" x1="0.0237495" y1="4.33853e-06" x2="116.492" y2="130.867" gradientUnits="userSpaceOnUse">
                        <stop stop-color="#D9D9D9" />
                        <stop offset="1" stop-color="#D9D9D9" stopOpacity="0" />
                      </linearGradient>
                    </defs>
                  </svg>
                </div>
              </div>
            ) : authData?.accessToken ? (
              <div className="relative rounded-2xl border border-[#E5E7EB] bg-white px-4 py-3 shadow-[0_4px_16px_rgba(0,0,0,0.06)]">
                <div className="mb-1 text-[15px] text-gray-500 flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <path d="M21.999 8.90262C21.999 8.72116 21.9495 8.54313 21.856 8.38762L19.147 3.87262C18.9686 3.57746 18.7171 3.33319 18.417 3.16331C18.1168 2.99343 17.7779 2.90365 17.433 2.90262H6.56502C5.86702 2.90262 5.21002 3.27462 4.85102 3.87362L2.14202 8.38762C2.04851 8.54313 1.99908 8.72116 1.99902 8.90262C1.99902 9.90762 2.38502 10.8166 2.99902 11.5206V20.9026C2.99902 21.1678 3.10438 21.4222 3.29192 21.6097C3.47945 21.7973 3.73381 21.9026 3.99902 21.9026H11.999C12.2642 21.9026 12.5186 21.7973 12.7061 21.6097C12.8937 21.4222 12.999 21.1678 12.999 20.9026V15.9026H16.999V20.9026C16.999 21.1678 17.1044 21.4222 17.2919 21.6097C17.4795 21.7973 17.7338 21.9026 17.999 21.9026H19.999C20.2642 21.9026 20.5186 21.7973 20.7061 21.6097C20.8937 21.4222 20.999 21.1678 20.999 20.9026V11.5206C21.613 10.8166 21.999 9.90762 21.999 8.90262ZM19.983 9.15362C19.9219 9.6367 19.6867 10.0809 19.3214 10.4029C18.9561 10.7249 18.486 10.9026 17.999 10.9026C16.896 10.9026 15.999 10.0056 15.999 8.90262C15.999 8.83462 15.974 8.77462 15.96 8.71062L15.98 8.70662L15.219 4.90262H17.433L19.983 9.15362ZM10.006 8.96762L10.818 4.90262H13.179L13.992 8.96762C13.957 10.0406 13.079 10.9026 11.999 10.9026C10.919 10.9026 10.041 10.0406 10.006 8.96762ZM6.56502 4.90262H8.77902L8.01902 8.70662L8.03902 8.71062C8.02402 8.77462 7.99902 8.83462 7.99902 8.90262C7.99902 10.0056 7.10202 10.9026 5.99902 10.9026C5.51209 10.9026 5.04191 10.7249 4.67664 10.4029C4.31138 10.0809 4.07613 9.6367 4.01502 9.15362L6.56502 4.90262ZM9.99902 16.9026H5.99902V13.9026H9.99902V16.9026Z" fill="#1A1A1A" fill-opacity="0.18" />
                  </svg>
                  <span>Chi nhánh</span>
                </div>
                <div className="flex items-center gap-2 text-[13px] font-semibold">
                  <span>Bạn chưa có chi nhánh?</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => navigate("/store/create")}
                    className="bg-gradient-to-r from-[#FF9F2E] to-[#FF4D00] text-white font-semibold"
                  >
                    Đăng ký
                  </Button>
                </div>
                <div className="pointer-events-none absolute right-3 top-1/2 -translate-y-1/2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="73" height="74" viewBox="0 0 73 74" fill="none">
                    <path d="M15.7195 9.23398C21.836 21.5709 36.0543 20.6538 46.7234 26.4303L46.2433 24.0814L42.6352 19.4977C45.6007 20.3137 49.1848 21.8115 51.4534 23.9154C53.0083 25.3554 56.2716 32.1147 58.0754 30.829L57.1294 26.435C63.8947 31.4038 59.1911 39.2783 67.3499 43.3513C69.8991 44.6236 70.7021 42.7122 72.2653 47.2091C73.5556 50.9296 73.018 54.2913 71.6473 57.8998C69.6113 52.5871 66.6051 53.0433 62.9099 50.8913C61.0101 49.7871 59.624 47.2548 57.676 46.0466C55.0391 44.4146 51.6881 43.8792 48.6344 44.0631C51.0791 46.1112 54.1245 46.8159 56.7776 48.8319C59.8718 51.1844 61.5653 54.8511 66.2708 54.787C66.6465 57.8671 63.8723 61.4912 60.6186 61.0601C60.827 44.0248 38.9658 54.3218 33.4985 42.184C35.8472 42.4641 37.1966 43.7263 39.6736 43.0382C46.932 41.0212 38.1001 35.672 31.9203 39.6644C24.2654 44.6095 27.1577 58.1308 31.6065 64.524C33.8177 67.7076 37.4675 70.7497 40.5768 74H12.5916C10.9711 69.6519 11.006 64.5379 12.6724 59.7884C8.73787 61.8528 8.29434 66.1462 5.74616 69.2264C4.55271 59.5305 7.93577 52.5784 15.1966 46.578C9.88275 46.7706 5.78094 49.8584 2.90342 54.1227C2.99962 46.7052 8.44083 40.4771 15.3107 38.1886C17.0019 37.6213 20.084 38.4944 19.6128 36.5041C12.5511 34.7921 5.7128 34.591 0.374431 40.2718C-0.0964985 40.3656 -0.0258778 39.6693 0.0701915 39.3417C1.65769 34.181 8.16969 30.3029 13.2999 29.5668C12.7469 27.2708 10.6536 26.4446 9.58718 24.1574C8.76152 22.381 8.28168 20.2101 8.26564 18.2497L12.0734 22.9379C16.7142 24.0265 20.3204 27.8467 24.224 29.6949C31.4784 33.1271 40.7307 30.4201 46.7187 37.7568C43.0151 28.013 31.3366 29.3644 23.6012 25.2772C14.4471 20.4364 10.7736 9.79366 13.3141 0L15.7195 9.23398ZM47.9927 72.6998C50.1812 71.9717 56.9093 70.0148 58.4034 71.7556C58.7096 72.4844 58.9398 73.2383 59.1069 74H48.0402C48.0299 73.9831 48.0172 73.9648 48.0069 73.9478C47.6458 73.358 46.9437 73.5071 47.9927 72.6998ZM42.7636 61.155C45.8333 60.499 52.9674 65.8111 55.5416 67.9642L45.7727 70.8967C44.4677 70.0501 36.348 64.8162 37.2682 63.5702C39.3589 63.705 41.1772 61.4924 42.7636 61.155ZM41.6845 59.7789L35.11 62.3318C32.641 59.6832 30.9884 56.8079 30.323 53.1832L35.2621 52.3433L41.6845 59.7789ZM33.4747 50.3361L30.2612 49.9708L30.9648 44.0536L33.4747 50.3361Z" fill="url(#paint0_linear_1475_13316)" />
                    <defs>
                      <linearGradient id="paint0_linear_1475_13316" x1="0.0237495" y1="4.33853e-06" x2="116.492" y2="130.867" gradientUnits="userSpaceOnUse">
                        <stop stop-color="#D9D9D9" />
                        <stop offset="1" stop-color="#D9D9D9" stopOpacity="0" />
                      </linearGradient>
                    </defs>
                  </svg>
                </div>
              </div>
            ) : (
              <div className="relative rounded-2xl border border-[#E5E7EB] bg-white px-4 py-3 shadow-[0_4px_16px_rgba(0,0,0,0.06)]">
                <div className="mb-1 text-[15px] text-gray-500 flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <path d="M21.999 8.90262C21.999 8.72116 21.9495 8.54313 21.856 8.38762L19.147 3.87262C18.9686 3.57746 18.7171 3.33319 18.417 3.16331C18.1168 2.99343 17.7779 2.90365 17.433 2.90262H6.56502C5.86702 2.90262 5.21002 3.27462 4.85102 3.87362L2.14202 8.38762C2.04851 8.54313 1.99908 8.72116 1.99902 8.90262C1.99902 9.90762 2.38502 10.8166 2.99902 11.5206V20.9026C2.99902 21.1678 3.10438 21.4222 3.29192 21.6097C3.47945 21.7973 3.73381 21.9026 3.99902 21.9026H11.999C12.2642 21.9026 12.5186 21.7973 12.7061 21.6097C12.8937 21.4222 12.999 21.1678 12.999 20.9026V15.9026H16.999V20.9026C16.999 21.1678 17.1044 21.4222 17.2919 21.6097C17.4795 21.7973 17.7338 21.9026 17.999 21.9026H19.999C20.2642 21.9026 20.5186 21.7973 20.7061 21.6097C20.8937 21.4222 20.999 21.1678 20.999 20.9026V11.5206C21.613 10.8166 21.999 9.90762 21.999 8.90262ZM19.983 9.15362C19.9219 9.6367 19.6867 10.0809 19.3214 10.4029C18.9561 10.7249 18.486 10.9026 17.999 10.9026C16.896 10.9026 15.999 10.0056 15.999 8.90262C15.999 8.83462 15.974 8.77462 15.96 8.71062L15.98 8.70662L15.219 4.90262H17.433L19.983 9.15362ZM10.006 8.96762L10.818 4.90262H13.179L13.992 8.96762C13.957 10.0406 13.079 10.9026 11.999 10.9026C10.919 10.9026 10.041 10.0406 10.006 8.96762ZM6.56502 4.90262H8.77902L8.01902 8.70662L8.03902 8.71062C8.02402 8.77462 7.99902 8.83462 7.99902 8.90262C7.99902 10.0056 7.10202 10.9026 5.99902 10.9026C5.51209 10.9026 5.04191 10.7249 4.67664 10.4029C4.31138 10.0809 4.07613 9.6367 4.01502 9.15362L6.56502 4.90262ZM9.99902 16.9026H5.99902V13.9026H9.99902V16.9026Z" fill="#1A1A1A" fill-opacity="0.18" />
                  </svg>
                  <span>Chi nhánh</span>
                </div>
                <div className="flex items-center gap-2 text-[13px] font-semibold">
                  <span>Truy cập để sử dụng?</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => onLogin()}
                    className="bg-gradient-to-r from-[#FF9F2E] to-[#FF4D00] text-white font-semibold"
                  >
                    Đăng nhập
                  </Button>
                </div>
                <div className="pointer-events-none absolute right-3 top-1/2 -translate-y-1/2">
                  <svg xmlns="http://www.w3.org/2000/svg" width="73" height="74" viewBox="0 0 73 74" fill="none">
                    <path d="M15.7195 9.23398C21.836 21.5709 36.0543 20.6538 46.7234 26.4303L46.2433 24.0814L42.6352 19.4977C45.6007 20.3137 49.1848 21.8115 51.4534 23.9154C53.0083 25.3554 56.2716 32.1147 58.0754 30.829L57.1294 26.435C63.8947 31.4038 59.1911 39.2783 67.3499 43.3513C69.8991 44.6236 70.7021 42.7122 72.2653 47.2091C73.5556 50.9296 73.018 54.2913 71.6473 57.8998C69.6113 52.5871 66.6051 53.0433 62.9099 50.8913C61.0101 49.7871 59.624 47.2548 57.676 46.0466C55.0391 44.4146 51.6881 43.8792 48.6344 44.0631C51.0791 46.1112 54.1245 46.8159 56.7776 48.8319C59.8718 51.1844 61.5653 54.8511 66.2708 54.787C66.6465 57.8671 63.8723 61.4912 60.6186 61.0601C60.827 44.0248 38.9658 54.3218 33.4985 42.184C35.8472 42.4641 37.1966 43.7263 39.6736 43.0382C46.932 41.0212 38.1001 35.672 31.9203 39.6644C24.2654 44.6095 27.1577 58.1308 31.6065 64.524C33.8177 67.7076 37.4675 70.7497 40.5768 74H12.5916C10.9711 69.6519 11.006 64.5379 12.6724 59.7884C8.73787 61.8528 8.29434 66.1462 5.74616 69.2264C4.55271 59.5305 7.93577 52.5784 15.1966 46.578C9.88275 46.7706 5.78094 49.8584 2.90342 54.1227C2.99962 46.7052 8.44083 40.4771 15.3107 38.1886C17.0019 37.6213 20.084 38.4944 19.6128 36.5041C12.5511 34.7921 5.7128 34.591 0.374431 40.2718C-0.0964985 40.3656 -0.0258778 39.6693 0.0701915 39.3417C1.65769 34.181 8.16969 30.3029 13.2999 29.5668C12.7469 27.2708 10.6536 26.4446 9.58718 24.1574C8.76152 22.381 8.28168 20.2101 8.26564 18.2497L12.0734 22.9379C16.7142 24.0265 20.3204 27.8467 24.224 29.6949C31.4784 33.1271 40.7307 30.4201 46.7187 37.7568C43.0151 28.013 31.3366 29.3644 23.6012 25.2772C14.4471 20.4364 10.7736 9.79366 13.3141 0L15.7195 9.23398ZM47.9927 72.6998C50.1812 71.9717 56.9093 70.0148 58.4034 71.7556C58.7096 72.4844 58.9398 73.2383 59.1069 74H48.0402C48.0299 73.9831 48.0172 73.9648 48.0069 73.9478C47.6458 73.358 46.9437 73.5071 47.9927 72.6998ZM42.7636 61.155C45.8333 60.499 52.9674 65.8111 55.5416 67.9642L45.7727 70.8967C44.4677 70.0501 36.348 64.8162 37.2682 63.5702C39.3589 63.705 41.1772 61.4924 42.7636 61.155ZM41.6845 59.7789L35.11 62.3318C32.641 59.6832 30.9884 56.8079 30.323 53.1832L35.2621 52.3433L41.6845 59.7789ZM33.4747 50.3361L30.2612 49.9708L30.9648 44.0536L33.4747 50.3361Z" fill="url(#paint0_linear_1475_13316)" />
                    <defs>
                      <linearGradient id="paint0_linear_1475_13316" x1="0.0237495" y1="4.33853e-06" x2="116.492" y2="130.867" gradientUnits="userSpaceOnUse">
                        <stop stop-color="#D9D9D9" />
                        <stop offset="1" stop-color="#D9D9D9" stopOpacity="0" />
                      </linearGradient>
                    </defs>
                  </svg>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Quick actions */}
        <div className="px-4">
          <div className="mb-2 text-[15px] font-semibold text-gray-900">Tiện ích shop</div>
          <div className="mb-4 grid grid-cols-3 gap-3">
            <QuickTile label="Sản phẩm" icon={<img src={Utilities1} className="w-[76px]" />} />
            <QuickTile label="Kho hàng" icon={<img src={Utilities2} />} />
            <QuickTile label="Nhân viên" icon={<img src={Utilities3} />} />
          </div>
        </div>

        {/* 7-day overview */}
        <div className="px-4">
          <div className="mb-2 text-[15px] font-semibold text-gray-900">Tổng quan 7 ngày</div>
          <div className="overflow-hidden rounded-2xl border border-[#E5E7EB] bg-white p-3 shadow-sm">
            <div className="h-36 w-full">
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={getWeeklyChartData()} margin={{ top: 6, right: 6, left: 0, bottom: 0 }}>
                  <CartesianGrid strokeDasharray="3 3" stroke="#F3F4F6" />
                  <XAxis dataKey="d" tick={{ fontSize: 12, fill: '#9CA3AF' }} axisLine={false} tickLine={false} />
                  <YAxis tick={{ fontSize: 12, fill: '#9CA3AF' }} axisLine={false} tickLine={false} width={28} />
                  <Tooltip contentStyle={{ fontSize: 12 }} />
                  <Line type="monotone" dataKey="v" stroke="#FF8A00" strokeWidth={2.5} dot={false} />
                </LineChart>
              </ResponsiveContainer>
            </div>
            <div className="mt-3 grid grid-cols-2 gap-3">
              <KPI icon={(
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
                  <path d="M7.997 12.3826C7.55167 12.3826 7.17167 12.2243 6.857 11.9076C6.54233 11.5909 6.385 11.2099 6.385 10.7646C6.385 10.3193 6.54333 9.93925 6.86 9.62459C7.17667 9.30992 7.558 9.15259 8.004 9.15259C8.45 9.15259 8.83 9.31125 9.144 9.62859C9.458 9.94592 9.61533 10.3269 9.616 10.7716C9.61667 11.2163 9.458 11.5963 9.14 11.9116C8.822 12.2269 8.441 12.3843 7.997 12.3836M4.375 4.65259H11.625L13.491 0.902588H2.51L4.375 4.65259ZM4.631 16.9026H11.369C12.6557 16.9026 13.749 16.4523 14.649 15.5516C15.5497 14.6509 16 13.5556 16 12.2656C16 11.7269 15.9077 11.2023 15.723 10.6916C15.5383 10.1809 15.2717 9.71592 14.923 9.29659L11.881 5.65259H4.119L1.077 9.29659C0.728333 9.71592 0.461667 10.1809 0.277 10.6916C0.0923333 11.2016 0 11.7263 0 12.2656C0 13.5556 0.450333 14.6509 1.351 15.5516C2.25167 16.4523 3.345 16.9026 4.631 16.9026Z" fill="#FFF6EB" />
                  <path d="M7.997 12.3826C7.55167 12.3826 7.17167 12.2243 6.857 11.9076C6.54233 11.5909 6.385 11.2099 6.385 10.7646C6.385 10.3193 6.54333 9.93925 6.86 9.62459C7.17667 9.30992 7.558 9.15259 8.004 9.15259C8.45 9.15259 8.83 9.31125 9.144 9.62859C9.458 9.94592 9.61533 10.3269 9.616 10.7716C9.61667 11.2163 9.458 11.5963 9.14 11.9116C8.822 12.2269 8.441 12.3843 7.997 12.3836M4.375 4.65259H11.625L13.491 0.902588H2.51L4.375 4.65259ZM4.631 16.9026H11.369C12.6557 16.9026 13.749 16.4523 14.649 15.5516C15.5497 14.6509 16 13.5556 16 12.2656C16 11.7269 15.9077 11.2023 15.723 10.6916C15.5383 10.1809 15.2717 9.71592 14.923 9.29659L11.881 5.65259H4.119L1.077 9.29659C0.728333 9.71592 0.461667 10.1809 0.277 10.6916C0.0923333 11.2016 0 11.7263 0 12.2656C0 13.5556 0.450333 14.6509 1.351 15.5516C2.25167 16.4523 3.345 16.9026 4.631 16.9026Z" fill="url(#paint0_radial_1472_9128)" />
                  <defs>
                    <radialGradient id="paint0_radial_1472_9128" cx="0" cy="0" r="1" gradientTransform="matrix(16 8.05242 -1.04291 16 8.07904e-07 0.850171)" gradientUnits="userSpaceOnUse">
                      <stop stop-color="#FFCC87" />
                      <stop offset="1" stop-color="#F79D23" />
                    </radialGradient>
                  </defs>
                </svg>
              )} label="Doanh thu" value={formatPrice(dataStatistics?.overview7Days?.totalRevenue || 0)} />
              <KPI icon={(
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
                  <g clip-path="url(#clip0_1472_9157)">
                    <path d="M7.52457 1.72546V6.64061C7.52457 7.49775 7.92629 7.90632 8.78343 7.90632H13.6317V13.9866C13.6317 15.3795 12.942 16.0826 11.5557 16.0826H4.44429C3.06486 16.0826 2.36829 15.3863 2.36829 13.9866V3.82804C2.36829 2.43518 3.06486 1.72546 4.44429 1.72546H7.52457ZM5.17886 10.3126H4.73229C4.48571 10.3126 4.28571 10.5126 4.28571 10.7592V13.8849C4.28571 14.1312 4.48571 14.3312 4.73229 14.3312H5.17886C5.42543 14.3312 5.62514 14.1312 5.62514 13.8846V10.7589C5.62514 10.5126 5.42514 10.3126 5.17886 10.3126ZM7.188 8.97318H6.74143C6.49486 8.97318 6.29514 9.17318 6.29514 9.41946V13.8846C6.29514 14.1312 6.49514 14.3312 6.74143 14.3312H7.188C7.43457 14.3312 7.63457 14.1312 7.63457 13.8846V9.41975C7.63457 9.17318 7.43457 8.97318 7.188 8.97318ZM9.19743 11.6523H8.75086C8.50429 11.6523 8.30429 11.8523 8.30429 12.0989V13.8849C8.30429 14.1315 8.50429 14.3315 8.75086 14.3315H9.19743C9.444 14.3315 9.64371 14.1315 9.64371 13.8849V12.0992C9.64371 11.8523 9.44372 11.6523 9.19743 11.6523ZM8.43514 1.79918C8.71657 1.84604 8.998 2.04032 9.30572 2.36175L13.0023 6.11832C13.3169 6.44632 13.5111 6.71432 13.558 6.98889H8.80372C8.56257 6.98889 8.43514 6.86832 8.43514 6.62718V1.79918Z" fill="#F79D23" />
                  </g>
                  <defs>
                    <clipPath id="clip0_1472_9157">
                      <rect width="16" height="16" fill="white" transform="translate(0 0.902588)" />
                    </clipPath>
                  </defs>
                </svg>
              )} label="Đơn hàng" value={dataStatistics?.overview7Days?.totalOrders?.toString() || "0"} align="right" />
            </div>
          </div>
        </div>
        <div className="px-4 pt-4">
          <div className="mb-2 text-[15px] font-semibold text-gray-900">Báo cáo</div>
          {/* Report tabs */}
          <div className="mb-4 grid grid-cols-4 gap-2 bg-[#F5F5F4] p-1 rounded-lg">
            {[
              { label: 'Hôm nay', key: 'today' as const },
              { label: 'Tuần này', key: 'thisWeek' as const },
              { label: 'Tháng này', key: 'thisMonth' as const },
              { label: 'Năm nay', key: 'thisYear' as const }
            ].map((tab) => (
              <button
                key={tab.key}
                onClick={() => setActiveReportTab(tab.key)}
                className={`h-9 rounded-lg border text-sm ${activeReportTab === tab.key ? 'border-[#E5E7EB] bg-white shadow-sm font-semibold text-gray-900' : 'border-none text-[#1A1A1A76]'}`}
              >
                {tab.label}
              </button>
            ))}
          </div>


          {/* small KPIs */}
          <div className="mb-4 grid grid-cols-2 gap-3 border py-4 px-3 rounded-2xl">
            <div>
              <KPI icon={(
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
                  <path d="M7.997 12.3826C7.55167 12.3826 7.17167 12.2243 6.857 11.9076C6.54233 11.5909 6.385 11.2099 6.385 10.7646C6.385 10.3193 6.54333 9.93925 6.86 9.62459C7.17667 9.30992 7.558 9.15259 8.004 9.15259C8.45 9.15259 8.83 9.31125 9.144 9.62859C9.458 9.94592 9.61533 10.3269 9.616 10.7716C9.61667 11.2163 9.458 11.5963 9.14 11.9116C8.822 12.2269 8.441 12.3843 7.997 12.3836M4.375 4.65259H11.625L13.491 0.902588H2.51L4.375 4.65259ZM4.631 16.9026H11.369C12.6557 16.9026 13.749 16.4523 14.649 15.5516C15.5497 14.6509 16 13.5556 16 12.2656C16 11.7269 15.9077 11.2023 15.723 10.6916C15.5383 10.1809 15.2717 9.71592 14.923 9.29659L11.881 5.65259H4.119L1.077 9.29659C0.728333 9.71592 0.461667 10.1809 0.277 10.6916C0.0923333 11.2016 0 11.7263 0 12.2656C0 13.5556 0.450333 14.6509 1.351 15.5516C2.25167 16.4523 3.345 16.9026 4.631 16.9026Z" fill="#FFF6EB" />
                  <path d="M7.997 12.3826C7.55167 12.3826 7.17167 12.2243 6.857 11.9076C6.54233 11.5909 6.385 11.2099 6.385 10.7646C6.385 10.3193 6.54333 9.93925 6.86 9.62459C7.17667 9.30992 7.558 9.15259 8.004 9.15259C8.45 9.15259 8.83 9.31125 9.144 9.62859C9.458 9.94592 9.61533 10.3269 9.616 10.7716C9.61667 11.2163 9.458 11.5963 9.14 11.9116C8.822 12.2269 8.441 12.3843 7.997 12.3836M4.375 4.65259H11.625L13.491 0.902588H2.51L4.375 4.65259ZM4.631 16.9026H11.369C12.6557 16.9026 13.749 16.4523 14.649 15.5516C15.5497 14.6509 16 13.5556 16 12.2656C16 11.7269 15.9077 11.2023 15.723 10.6916C15.5383 10.1809 15.2717 9.71592 14.923 9.29659L11.881 5.65259H4.119L1.077 9.29659C0.728333 9.71592 0.461667 10.1809 0.277 10.6916C0.0923333 11.2016 0 11.7263 0 12.2656C0 13.5556 0.450333 14.6509 1.351 15.5516C2.25167 16.4523 3.345 16.9026 4.631 16.9026Z" fill="url(#paint0_radial_1472_8890)" />
                  <defs>
                    <radialGradient id="paint0_radial_1472_8890" cx="0" cy="0" r="1" gradientTransform="matrix(16 8.05242 -1.04291 16 8.07904e-07 0.850171)" gradientUnits="userSpaceOnUse">
                      <stop stop-color="#FFCC87" />
                      <stop offset="1" stop-color="#F79D23" />
                    </radialGradient>
                  </defs>
                </svg>
              )} label="Doanh thu" value={formatPrice(getCurrentReportData().totalRevenue)} sub={getCurrentReportData().revenueGrowth.text} />
            </div>
            <div className="">
              <KPI align="right" icon={(
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
                  <g clip-path="url(#clip0_1475_12350)">
                    <path d="M7.52457 1.72546V6.64061C7.52457 7.49775 7.92629 7.90632 8.78343 7.90632H13.6317V13.9866C13.6317 15.3795 12.942 16.0826 11.5557 16.0826H4.44429C3.06486 16.0826 2.36829 15.3863 2.36829 13.9866V3.82804C2.36829 2.43518 3.06486 1.72546 4.44429 1.72546H7.52457ZM5.17886 10.3126H4.73229C4.48571 10.3126 4.28571 10.5126 4.28571 10.7592V13.8849C4.28571 14.1312 4.48571 14.3312 4.73229 14.3312H5.17886C5.42543 14.3312 5.62514 14.1312 5.62514 13.8846V10.7589C5.62514 10.5126 5.42514 10.3126 5.17886 10.3126ZM7.188 8.97318H6.74143C6.49486 8.97318 6.29514 9.17318 6.29514 9.41946V13.8846C6.29514 14.1312 6.49514 14.3312 6.74143 14.3312H7.188C7.43457 14.3312 7.63457 14.1312 7.63457 13.8846V9.41975C7.63457 9.17318 7.43457 8.97318 7.188 8.97318ZM9.19743 11.6523H8.75086C8.50429 11.6523 8.30429 11.8523 8.30429 12.0989V13.8849C8.30429 14.1315 8.50429 14.3315 8.75086 14.3315H9.19743C9.444 14.3315 9.64371 14.1315 9.64371 13.8849V12.0992C9.64371 11.8523 9.44372 11.6523 9.19743 11.6523ZM8.43514 1.79918C8.71657 1.84604 8.998 2.04032 9.30572 2.36175L13.0023 6.11832C13.3169 6.44632 13.5111 6.71432 13.558 6.98889H8.80372C8.56257 6.98889 8.43514 6.86832 8.43514 6.62718V1.79918Z" fill="#F79D23" />
                  </g>
                  <defs>
                    <clipPath id="clip0_1475_12350">
                      <rect width="16" height="16" fill="white" transform="translate(0 0.902588)" />
                    </clipPath>
                  </defs>
                </svg>
              )} label="Đơn hàng" value={getCurrentReportData().totalOrders.toString()} sub={getCurrentReportData().orderGrowth.text} />
            </div>
          </div>
          {/* Top products */}
          <Card title="Top 5 Sản phẩm bán chạy">
            {/* List-style bars to match the reference UI */}
            <div className="space-y-4 pt-3">
              {getTopProducts().map((p) => {
                const products = getTopProducts();
                const max = Math.max(...products.map(tp => tp.sold));
                const percent = max > 0 ? Math.max(4, Math.round((p.sold / max) * 100)) : 4;
                return (
                  <div key={p.name} className="flex items-center gap-3">
                    {/* Left name */}
                    <div className="min-w-[96px] flex-1 text-[15px] font-medium text-gray-700">
                      {p.name}
                    </div>

                    {/* Middle bar */}
                    <div className="mx-2 h-[14px] flex-[2] rounded-full bg-gray-100">
                      <div
                        className="h-full rounded-full bg-emerald-500"
                        style={{ width: `${percent}%` }}
                      />
                    </div>

                    {/* Right value */}
                    <div className="w-[56px] text-right text-[15px] text-gray-600">
                      {p.sold}
                    </div>
                  </div>
                );
              })}
            </div>
          </Card>


          {/* Payment methods */}
          <Card title="Hình thức thanh toán phổ biến"
            icon={(
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
                <g clip-path="url(#clip0_1475_13358)">
                  <path d="M14.84 3.13592C14.7774 3.06274 14.6997 3.00399 14.6123 2.96372C14.5248 2.92344 14.4296 2.90258 14.3333 2.90259H8.33334C8.23869 2.90271 8.14514 2.92298 8.05893 2.96207C7.97272 3.00115 7.89582 3.05814 7.83334 3.12925C7.77071 3.20059 7.72404 3.28448 7.69645 3.3753C7.66886 3.46613 7.66098 3.5618 7.67334 3.65592L8.34001 8.65592C8.35139 8.74347 8.3799 8.82792 8.42392 8.90445C8.46794 8.98097 8.5266 9.04808 8.59655 9.10194C8.66651 9.1558 8.74638 9.19535 8.83162 9.21834C8.91686 9.24133 9.00579 9.2473 9.09334 9.23592C9.18089 9.22454 9.26534 9.19603 9.34187 9.15201C9.4184 9.10799 9.4855 9.04933 9.53936 8.97938C9.59322 8.90942 9.63277 8.82955 9.65576 8.74431C9.67875 8.65907 9.68472 8.57014 9.67334 8.48259L9.13334 4.42259C9.12957 4.39982 9.13123 4.37648 9.13818 4.35447C9.14513 4.33246 9.15718 4.3124 9.17334 4.29592C9.18734 4.27893 9.20456 4.26488 9.22401 4.25458C9.24346 4.24429 9.26476 4.23794 9.28668 4.23592H13.3333C13.3578 4.23456 13.3822 4.23933 13.4043 4.24981C13.4264 4.26029 13.4456 4.27614 13.46 4.29592C13.4763 4.3137 13.4883 4.33492 13.4953 4.35801C13.5022 4.3811 13.5038 4.40545 13.5 4.42925L12.7733 8.80925C12.7442 8.98606 12.7864 9.16722 12.8908 9.31288C12.9952 9.45853 13.1532 9.55675 13.33 9.58592C13.4176 9.60037 13.5071 9.59743 13.5935 9.57727C13.6799 9.55711 13.7615 9.52013 13.8336 9.46844C13.9793 9.36405 14.0775 9.20606 14.1067 9.02925L15 3.69592C15.0174 3.59656 15.0121 3.49453 14.9844 3.39752C14.9567 3.30052 14.9073 3.21107 14.84 3.13592Z" fill="#FFF6EB" />
                  <path d="M14.84 3.13592C14.7774 3.06274 14.6997 3.00399 14.6123 2.96372C14.5248 2.92344 14.4296 2.90258 14.3333 2.90259H8.33334C8.23869 2.90271 8.14514 2.92298 8.05893 2.96207C7.97272 3.00115 7.89582 3.05814 7.83334 3.12925C7.77071 3.20059 7.72404 3.28448 7.69645 3.3753C7.66886 3.46613 7.66098 3.5618 7.67334 3.65592L8.34001 8.65592C8.35139 8.74347 8.3799 8.82792 8.42392 8.90445C8.46794 8.98097 8.5266 9.04808 8.59655 9.10194C8.66651 9.1558 8.74638 9.19535 8.83162 9.21834C8.91686 9.24133 9.00579 9.2473 9.09334 9.23592C9.18089 9.22454 9.26534 9.19603 9.34187 9.15201C9.4184 9.10799 9.4855 9.04933 9.53936 8.97938C9.59322 8.90942 9.63277 8.82955 9.65576 8.74431C9.67875 8.65907 9.68472 8.57014 9.67334 8.48259L9.13334 4.42259C9.12957 4.39982 9.13123 4.37648 9.13818 4.35447C9.14513 4.33246 9.15718 4.3124 9.17334 4.29592C9.18734 4.27893 9.20456 4.26488 9.22401 4.25458C9.24346 4.24429 9.26476 4.23794 9.28668 4.23592H13.3333C13.3578 4.23456 13.3822 4.23933 13.4043 4.24981C13.4264 4.26029 13.4456 4.27614 13.46 4.29592C13.4763 4.3137 13.4883 4.33492 13.4953 4.35801C13.5022 4.3811 13.5038 4.40545 13.5 4.42925L12.7733 8.80925C12.7442 8.98606 12.7864 9.16722 12.8908 9.31288C12.9952 9.45853 13.1532 9.55675 13.33 9.58592C13.4176 9.60037 13.5071 9.59743 13.5935 9.57727C13.6799 9.55711 13.7615 9.52013 13.8336 9.46844C13.9793 9.36405 14.0775 9.20606 14.1067 9.02925L15 3.69592C15.0174 3.59656 15.0121 3.49453 14.9844 3.39752C14.9567 3.30052 14.9073 3.21107 14.84 3.13592Z" fill="url(#paint0_radial_1475_13358)" />
                  <path d="M12.6667 10.2359H8.66667C8.63565 10.237 8.60502 10.2286 8.57883 10.212C8.55264 10.1953 8.53213 10.1711 8.52 10.1425L7.88 8.90252C7.8558 8.85209 7.81931 8.80856 7.77387 8.77594C7.72843 8.74332 7.67552 8.72266 7.62 8.71585C7.56397 8.7094 7.50721 8.71699 7.45483 8.73794C7.40246 8.75889 7.35613 8.79254 7.32 8.83585L6.06667 10.3759C5.96355 10.4851 5.82319 10.5517 5.67333 10.5625H5.00667C4.96177 10.5616 4.91715 10.5698 4.87549 10.5866C4.83383 10.6033 4.79598 10.6283 4.76423 10.6601C4.73248 10.6918 4.70746 10.7297 4.6907 10.7713C4.67393 10.813 4.66576 10.8576 4.66667 10.9025V14.9025C4.66558 14.9545 4.67715 15.0059 4.70038 15.0523C4.72361 15.0988 4.7578 15.1389 4.8 15.1692C6.33333 16.3225 7.52 16.9025 8.33333 16.9025H12.0333C12.3236 16.9516 12.6216 16.8859 12.8642 16.7191C13.1069 16.5524 13.2751 16.2978 13.3333 16.0092C13.6581 14.4341 13.8808 12.8397 14 11.2359C14 10.7359 13.54 10.2359 12.6667 10.2359ZM3.22 9.90252H1.16667C1.12246 9.90252 1.08007 9.92008 1.04882 9.95134C1.01756 9.98259 1 10.025 1 10.0692V16.0692C1 16.1134 1.01756 16.1558 1.04882 16.187C1.08007 16.2183 1.12246 16.2359 1.16667 16.2359H3.22C3.27575 16.2424 3.33226 16.2372 3.38585 16.2204C3.43944 16.2037 3.48891 16.1759 3.53104 16.1388C3.57317 16.1017 3.60702 16.0561 3.63039 16.0051C3.65375 15.954 3.66611 15.8987 3.66667 15.8425V10.2959C3.66611 10.2397 3.65375 10.1843 3.63039 10.1333C3.60702 10.0822 3.57317 10.0367 3.53104 9.99959C3.48891 9.96249 3.43944 9.93467 3.38585 9.91795C3.33226 9.90123 3.27575 9.89597 3.22 9.90252ZM10.3333 6.90252C10.3333 7.16774 10.4387 7.42209 10.6262 7.60963C10.8138 7.79716 11.0681 7.90252 11.3333 7.90252C11.5985 7.90252 11.8529 7.79716 12.0404 7.60963C12.228 7.42209 12.3333 7.16774 12.3333 6.90252C12.3333 6.6373 12.228 6.38295 12.0404 6.19541C11.8529 6.00788 11.5985 5.90252 11.3333 5.90252C11.0681 5.90252 10.8138 6.00788 10.6262 6.19541C10.4387 6.38295 10.3333 6.6373 10.3333 6.90252ZM6.66667 8.23585C6.76396 8.23711 6.86035 8.21705 6.94906 8.17709C7.03778 8.13713 7.11667 8.07823 7.1802 8.00454C7.24374 7.93084 7.29037 7.84413 7.31682 7.75049C7.34327 7.65686 7.34891 7.55857 7.33333 7.46252L6.48667 2.42919C6.47025 2.38626 6.47025 2.33878 6.48667 2.29585C6.50701 2.26873 6.53513 2.24846 6.5673 2.23774C6.59946 2.22702 6.63412 2.22636 6.66667 2.23585H12C12.1768 2.23585 12.3464 2.16562 12.4714 2.04059C12.5964 1.91557 12.6667 1.746 12.6667 1.56919C12.6667 1.39238 12.5964 1.22281 12.4714 1.09778C12.3464 0.972759 12.1768 0.902521 12 0.902521H5.66667C5.56937 0.901266 5.47299 0.921324 5.38427 0.961285C5.29555 1.00125 5.21666 1.06014 5.15313 1.13384C5.0896 1.20754 5.04297 1.29425 5.01651 1.38788C4.99006 1.48152 4.98442 1.57981 5 1.67585L6 7.67585C6.02556 7.8336 6.10693 7.97693 6.22929 8.07971C6.35166 8.1825 6.50687 8.23791 6.66667 8.23585Z" fill="#FFF6EB" />
                  <path d="M12.6667 10.2359H8.66667C8.63565 10.237 8.60502 10.2286 8.57883 10.212C8.55264 10.1953 8.53213 10.1711 8.52 10.1425L7.88 8.90252C7.8558 8.85209 7.81931 8.80856 7.77387 8.77594C7.72843 8.74332 7.67552 8.72266 7.62 8.71585C7.56397 8.7094 7.50721 8.71699 7.45483 8.73794C7.40246 8.75889 7.35613 8.79254 7.32 8.83585L6.06667 10.3759C5.96355 10.4851 5.82319 10.5517 5.67333 10.5625H5.00667C4.96177 10.5616 4.91715 10.5698 4.87549 10.5866C4.83383 10.6033 4.79598 10.6283 4.76423 10.6601C4.73248 10.6918 4.70746 10.7297 4.6907 10.7713C4.67393 10.813 4.66576 10.8576 4.66667 10.9025V14.9025C4.66558 14.9545 4.67715 15.0059 4.70038 15.0523C4.72361 15.0988 4.7578 15.1389 4.8 15.1692C6.33333 16.3225 7.52 16.9025 8.33333 16.9025H12.0333C12.3236 16.9516 12.6216 16.8859 12.8642 16.7191C13.1069 16.5524 13.2751 16.2978 13.3333 16.0092C13.6581 14.4341 13.8808 12.8397 14 11.2359C14 10.7359 13.54 10.2359 12.6667 10.2359ZM3.22 9.90252H1.16667C1.12246 9.90252 1.08007 9.92008 1.04882 9.95134C1.01756 9.98259 1 10.025 1 10.0692V16.0692C1 16.1134 1.01756 16.1558 1.04882 16.187C1.08007 16.2183 1.12246 16.2359 1.16667 16.2359H3.22C3.27575 16.2424 3.33226 16.2372 3.38585 16.2204C3.43944 16.2037 3.48891 16.1759 3.53104 16.1388C3.57317 16.1017 3.60702 16.0561 3.63039 16.0051C3.65375 15.954 3.66611 15.8987 3.66667 15.8425V10.2959C3.66611 10.2397 3.65375 10.1843 3.63039 10.1333C3.60702 10.0822 3.57317 10.0367 3.53104 9.99959C3.48891 9.96249 3.43944 9.93467 3.38585 9.91795C3.33226 9.90123 3.27575 9.89597 3.22 9.90252ZM10.3333 6.90252C10.3333 7.16774 10.4387 7.42209 10.6262 7.60963C10.8138 7.79716 11.0681 7.90252 11.3333 7.90252C11.5985 7.90252 11.8529 7.79716 12.0404 7.60963C12.228 7.42209 12.3333 7.16774 12.3333 6.90252C12.3333 6.6373 12.228 6.38295 12.0404 6.19541C11.8529 6.00788 11.5985 5.90252 11.3333 5.90252C11.0681 5.90252 10.8138 6.00788 10.6262 6.19541C10.4387 6.38295 10.3333 6.6373 10.3333 6.90252ZM6.66667 8.23585C6.76396 8.23711 6.86035 8.21705 6.94906 8.17709C7.03778 8.13713 7.11667 8.07823 7.1802 8.00454C7.24374 7.93084 7.29037 7.84413 7.31682 7.75049C7.34327 7.65686 7.34891 7.55857 7.33333 7.46252L6.48667 2.42919C6.47025 2.38626 6.47025 2.33878 6.48667 2.29585C6.50701 2.26873 6.53513 2.24846 6.5673 2.23774C6.59946 2.22702 6.63412 2.22636 6.66667 2.23585H12C12.1768 2.23585 12.3464 2.16562 12.4714 2.04059C12.5964 1.91557 12.6667 1.746 12.6667 1.56919C12.6667 1.39238 12.5964 1.22281 12.4714 1.09778C12.3464 0.972759 12.1768 0.902521 12 0.902521H5.66667C5.56937 0.901266 5.47299 0.921324 5.38427 0.961285C5.29555 1.00125 5.21666 1.06014 5.15313 1.13384C5.0896 1.20754 5.04297 1.29425 5.01651 1.38788C4.99006 1.48152 4.98442 1.57981 5 1.67585L6 7.67585C6.02556 7.8336 6.10693 7.97693 6.22929 8.07971C6.35166 8.1825 6.50687 8.23791 6.66667 8.23585Z" fill="url(#paint1_radial_1475_13358)" />
                </g>
                <defs>
                  <radialGradient id="paint0_radial_1475_13358" cx="0" cy="0" r="1" gradientTransform="matrix(7.34238 3.3681 -0.47859 6.69235 7.66766 2.88066)" gradientUnits="userSpaceOnUse">
                    <stop stop-color="#FFCC87" />
                    <stop offset="1" stop-color="#F79D23" />
                  </radialGradient>
                  <radialGradient id="paint1_radial_1475_13358" cx="0" cy="0" r="1" gradientTransform="matrix(13 8.06044 -0.847364 16.0159 1 0.849996)" gradientUnits="userSpaceOnUse">
                    <stop stop-color="#FFCC87" />
                    <stop offset="1" stop-color="#F79D23" />
                  </radialGradient>
                  <clipPath id="clip0_1475_13358">
                    <rect width="16" height="16" fill="white" transform="translate(0 0.902588)" />
                  </clipPath>
                </defs>
              </svg>
            )}
          >
            <div className="flex items-center gap-4">
              <div className="h-40 w-40 relative">
                <ResponsiveContainer>
                  <PieChart>
                    <Pie data={getPaymentMethodsData().data} dataKey="value" nameKey="name" innerRadius={56} outerRadius={80} paddingAngle={2}>
                      {getPaymentMethodsData().data.map((_, i) => (
                        <Cell key={i} fill={pieColors[i % pieColors.length]} />
                      ))}
                    </Pie>
                  </PieChart>
                </ResponsiveContainer>
                <div className="pt-1 text-center text-2xl font-bold absolute inset-0 flex flex-col items-center justify-center">
                  {getPaymentMethodsData().primaryMethod.percentage}%
                  <span className="text-sm font-medium text-gray-500">{getPaymentMethodsData().primaryMethod.name}</span>
                </div>
              </div>
              <div className="flex-1 space-y-2 text-sm">
                {getPaymentMethodsData().data.map((p, i) => (
                  <div key={p.name} className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <span className="inline-block h-3.5 w-3.5 rounded-sm" style={{ background: pieColors[i % pieColors.length] }} />
                      {p.name}
                    </div>
                    <div className="text-gray-600">{p.value}%</div>
                  </div>
                ))}
              </div>
            </div>
          </Card>


          {/* Recent orders */}
          <div className="mb-2 mt-4 text-[15px] font-semibold text-gray-900">Đơn hàng gần đây</div>
          <div className="space-y-3">
            {getRecentOrders().map((o) => (
              <div key={o.id} className="flex items-center justify-between rounded-2xl border border-[#E5E7EB] bg-white px-4 py-3 shadow-sm">
                <div className="flex items-center gap-3">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <path d="M11.2869 2.13684V9.50955C11.2869 10.7953 11.8894 11.4081 13.1751 11.4081H20.4476V20.5286C20.4476 22.6178 19.413 23.6726 17.3336 23.6726H6.66643C4.59729 23.6726 3.55243 22.6281 3.55243 20.5286V5.2907C3.55243 3.20141 4.59729 2.13684 6.66643 2.13684H11.2869ZM7.76829 15.0176H7.09843C6.72857 15.0176 6.42857 15.3176 6.42857 15.6874V20.376C6.42857 20.7454 6.72857 21.0454 7.09843 21.0454H7.76829C8.13814 21.0454 8.43772 20.7454 8.43772 20.3756V15.687C8.43772 15.3176 8.13771 15.0176 7.76829 15.0176ZM10.782 13.0084H10.1121C9.74229 13.0084 9.44272 13.3084 9.44272 13.6778V20.3756C9.44272 20.7454 9.74271 21.0454 10.1121 21.0454H10.782C11.1519 21.0454 11.4519 20.7454 11.4519 20.3756V13.6783C11.4519 13.3084 11.1519 13.0084 10.782 13.0084ZM13.7961 17.0271H13.1263C12.7564 17.0271 12.4564 17.3271 12.4564 17.697V20.376C12.4564 20.7458 12.7564 21.0458 13.1263 21.0458H13.7961C14.166 21.0458 14.4656 20.7458 14.4656 20.376V17.6974C14.4656 17.3271 14.1656 17.0271 13.7961 17.0271ZM12.6527 2.24741C13.0749 2.3177 13.497 2.60913 13.9586 3.09127L19.5034 8.72613C19.9753 9.21813 20.2667 9.62013 20.337 10.032H13.2056C12.8439 10.032 12.6527 9.85113 12.6527 9.48941V2.24741Z" fill="#F79D23" />
                  </svg>
                  <div>
                    <div className="text-[15px] font-semibold">{o.code}</div>
                    {o.time && <div className="text-[12px] text-gray-500">{o.time}</div>}
                  </div>
                </div>
                {o.code !== 'Chưa có đơn hàng' && (
                  <div className="text-[15px] font-semibold text-emerald-600">+{o.amount} đ</div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="h-8" />
    </div >
  )
}

/* ---------------- Reusable ---------------- */
function QuickTile({ label, icon }: { label: string; icon: React.ReactNode }) {
  return (
    <button className="flex h-24 flex-col items-center justify-center gap-2 rounded-2xl border border-[#FFEDD6] bg-[#FFF7ED] shadow-[0_2px_12px_rgba(0,0,0,0.04)]">
      {icon}
      <div className="text-[13px] font-medium">{label}</div>
    </button>
  );
}

function Card({ children, title, icon }: React.PropsWithChildren<{ title?: string; icon?: React.ReactNode }>) {
  return (
    <div className="mb-4 overflow-hidden rounded-2xl border border-[#E5E7EB] bg-white px-3 py-4 shadow-sm">
      {title && <div className="mb-2 flex items-center gap-2 text-[15px] font-semibold">
        {icon && <span className="text-[#F59E0B]">{icon}</span>}
        {title}</div>}
      {children}
    </div>
  );
}

function KPI({ icon, label, value, sub, align = "left" }: { icon: React.ReactNode; label: string; value: string; sub?: string; align?: "left" | "right" }) {
  return (
    <div className={`flex items-start ${align === 'right' ? 'justify-end text-right' : 'justify-start'} gap-2`}>
      <div>
        <div className={`text-[#F59E0B] min-w-4 flex items-center gap-1 ${align === 'right' ? 'justify-end' : ''}`}>
          {icon}
          <div className="text-[15px] text-gray-500">{label}</div>
        </div>
        <div className="text-[18px] font-extrabold tracking-tight mt-2">{value}</div>
        {sub && <div className="text-[12px] font-medium text-emerald-600 mt-1">{sub}</div>}
      </div>
    </div>
  );
}

/* ---------------- Configuration & Constants ---------------- */
// Màu sắc cho PieChart
const pieColors = ["#3B82F6", "#60A5FA", "#F59E0B", "#FCD34D"]; // xanh, vàng theo thiết kế

/*
  NOTE: Tất cả mock data đã được thay thế bằng dữ liệu thật từ dataStatistics API
  - weeklyData -> getWeeklyChartData() từ dataStatistics.overview7Days.dailyData
  - topProducts -> getTopProducts() từ dataStatistics.topProducts
  - paymentData -> getPaymentMethodsData() từ dataStatistics.paymentMethods
  - orders -> getRecentOrders() từ dataStatistics.recentOrders
  - KPI data -> getCurrentReportData() từ dataStatistics.summary với các tab khác nhau
*/
export default HomePage;
